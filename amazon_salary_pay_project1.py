# -*- coding: utf-8 -*-
"""Amazon_Salary_Pay Project1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vH33RbcCXWQwPM_iT2KznuapIn5gi0Yk

### You work for Amazon HR company, and you are currently recruiting for the Software Engineering department. Specifically for this upcoming 2023 SE Summer internship. After a short period of interviews, you have found a perfect candidate. However, her desirable annual pay is 181K for a SE project manager. Yet, the prospect only has 1 year and a half of experience. Formulate a program to predict whether it is worth providing her compensation or not.

## Importing all libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from scipy.ndimage.filters import gaussian_filter1d

"""## Importing needed data entries based on the provided datasheet"""

from re import X
dataset = pd.read_csv('Amazon_Salary_Pay.csv')
X = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

"""### Creating a Linear Regression model to see the prediction annual salary"""

from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()
lin_reg.fit(X, y)

"""### Formulating the Polynomial Regression to see the actual salary annual pay given."""

from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree = 12)
X_poly = poly_reg.fit_transform(X)
lin_reg_2 = LinearRegression()
lin_reg_2.fit(X_poly, y)

"""Creating the "Predictament Graph" using Linear Regression formula."""

plt.scatter(X, y, color = 'orange')
plt.plot(X, lin_reg.predict(X), color = 'blue')
plt.title('Amazon Salary Prediction', color = 'blue', weight = 'bold')
plt.tick_params(axis='x', colors='orange')
plt.tick_params(axis='y', colors='orange')
plt.text(6,50000,'(sources found on GlassDoor)', weight = 'bold')
plt.xlabel('Position Levels', weight = 'bold')
plt.ylabel('Annual Salary', weight = 'bold')
plt.show()

"""### Creating Actual model using Polynomial Regression forumla. """

plt.scatter(X, y, color = 'orange')
plt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')
plt.title('Amazon Salary Prediction (Actual)', color = 'blue', weight = 'bold')
plt.tick_params(axis='x', colors='orange')
plt.tick_params(axis='y', colors='orange')
plt.text(6,50000,'(sources found on GlassDoor)', weight = 'bold')
plt.xlabel('Position Levels', weight = 'bold')
plt.ylabel('Annual Salary', weight = 'bold')
plt.show()

"""### Higher Resoluton of Polynomial Reg. Model. """

plt.scatter(X, y, color = 'orange')
plt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')
plt.title('Amazon Salary Prediction (Actual)', color = 'blue', weight = 'bold')
plt.tick_params(axis='x', colors='orange')
plt.tick_params(axis='y', colors='orange')
plt.text(6,50000,'(sources found on GlassDoor)', weight = 'bold')
plt.xlabel('Position Levels', weight = 'bold')
plt.ylabel('Annual Salary', weight = 'bold')
plt.show()

ysmoothed = gaussian_filter1d(y, sigma=0.6)
plt.plot(X, ysmoothed, color = 'blue')
plt.title('Higher Resolution of Actual Salary', color = 'orange', weight = 'bold')
plt.text(6,50000,'(sources found on GlassDoor)', weight = 'bold')
plt.xlabel('Position Levels', weight = 'bold')
plt.ylabel('Annual Salary', weight = 'bold')
plt.show()

"""### Prediciting new result with Linear REG."""

lin_reg.predict([[6.5]])

"""#### note that this annual salary above, is "bluff". Because this is way above her asking price, as well above her job experience.

#Prediciting new result with polyinomial REG.
"""

lin_reg_2.predict(poly_reg.fit_transform([[6.5]]))

"""### In conclusion, the prospect will be receiving 186K annual salary. This is because she has 1 and a half year of experience. Note that the job she is seeking is project manager, so we focus on levels 6 to 7. To figure this out, we input 6.5 as a 2D array. In result, instead of her asking salary (181k), she will be receiving 186K!"""